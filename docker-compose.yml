services:
  master:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: master
    image: ubuntu:22.04
    command: sleep infinity
    ports:
      - "6443:6443" # Kubernetes API 서버 포트
      - "2379:2379" # etcd 포트
    networks:
      k8s_net:
        ipv4_address: 10.0.2.10
    extra_hosts:
      - "worker-node1:10.0.2.11"
      - "worker-node2:10.0.2.12"
    volumes:
      - ./kubeconfig:/root/.kube/config
    mem_limit: 512m
    cpus: 1.0
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M

    depends_on:
      - etcd
      - api-server
      - controller-manager
      - scheduler

  api-server:
    container_name: k8s-api-server
    image: docker/desktop-kubernetes-apiserver:v1.30.2
    command:
      - kube-apiserver
      - --advertise-address=10.0.2.90
      - --bind-address=0.0.0.0
      - --service-cluster-ip-range=10.96.0.0/12
      - --etcd-servers=http://etcd:2379
      - --allow-privileged=true
    networks:
      k8s_net:
        ipv4_address: 10.0.2.90
    depends_on:
      - etcd
    volumes:
      - /etc/kubernetes:/etc/kubernetes
    ports:
      - "6443:6443"  # API 서버의 포트를 호스트와 매핑

  # Etcd
  etcd:
    container_name: k8s-etcd
    image: docker/desktop-kubernetes-etcd:3.5.12-0
    command: etcd --listen-client-urls=http://0.0.0.0:2379 --advertise-client-urls=http://localhost:2379
    networks:
      k8s_net:
        ipv4_address: 10.0.2.91
    volumes:
      - ./etcd-data:/var/lib/etcd # Etcd 데이터 저장소

  # Controller Manager
  controller-manager:
    container_name: k8s-controller-manager
    image: docker/desktop-kubernetes-controller-manager:v1.30.2
    command:
      - kube-controller-manager
      - --master=http://api-server:6443
      - --service-account-private-key-file=/etc/kubernetes/pki/sa.key 
      - --root-ca-file=/etc/kubernetes/pki/ca.crt
    networks:
      k8s_net:
        ipv4_address: 10.0.2.92
    depends_on:
      - api-server
    volumes:
      - /etc/kubernetes:/etc/kubernetes


  # Scheduler
  scheduler:
    container_name: k8s-scheduler
    image: docker/desktop-kubernetes-scheduler:v1.30.2
    command:
      - kube-scheduler
      - --master=http://api-server:6443
    networks:
      k8s_net:
        ipv4_address: 10.0.2.93
    depends_on:
      - api-server
    volumes:
      - /etc/kubernetes:/etc/kubernetes


  worker1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: worker1
    image: ubuntu:22.04
    command: sleep infinity
    networks:
      k8s_net:
        ipv4_address: 10.0.2.11
    extra_hosts:
      - "master-node:10.0.2.10"
      - "worker-node2:10.0.2.12"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys
      - /:/rootfs
      - /etc/kubernetes:/etc/kubernetes
      - ./kubeconfig:/root/.kube/config
    mem_limit: 512m
    cpus: 1.0
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M
    ports:
      - "2221:22"

  worker2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: worker2
    image: ubuntu:22.04
    command: sleep infinity
    networks:
      k8s_net:
        ipv4_address: 10.0.2.12
    extra_hosts:
      - "master-node:10.0.2.10"
      - "worker-node1:10.0.2.11"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys
      - /:/rootfs
      - /etc/kubernetes:/etc/kubernetes
      - ./kubeconfig:/root/.kube/config
    mem_limit: 512m
    cpus: 1.0
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M
    ports:
      - "2222:22"

 
networks:
  k8s_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.2.0/24
